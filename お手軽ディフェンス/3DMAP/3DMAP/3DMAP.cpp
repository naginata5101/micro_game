#include <Mikan.h>

//プログラム起動時に1度だけ実行
//システム設定などを行う
void SystemInit( void )
{
  MikanWindow->SetWindowName( "3DWROLD" );
  MikanWindow->SetWindowIcon( "3DWROLD" );
}

//MainLoop開始前に1度だけ実行
//テクスチャの読み込みなどのゲーム開始前の準備を行う
void UserInit( void )
{
	//0番の画像をmap.pngにする。透過色は深緑
	MikanDraw->CreateTexture(0,"map.png",TRC_ZERO);
}

//1秒間に60回実行
//0を返している間は何度でも実行される
int MainLoop( void )
{
		int map[15][20][5]={{
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
	},{
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
	},{
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
		{2,3,4,5,6},
	},{
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
	},{
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
	},{
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
		{2,3,4,5,0},
	},{
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
	},{
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
	},{
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
		{2,3,4,0,0},
	},{
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
	},{
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
	},{
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
		{2,3,0,0,0},
	},{
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
	},{
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
	},{
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
		{2,0,0,0,0},
	},};

	int i,j,k;
	int const MapSize=32;


	//画面の初期化
	MikanDraw->ClearScreen();
	
	for(i=0;i<15;i++){
		for(j=0;j<20;j++){
			for(k=0;k<5;k++){
				if(map[i][j][k]==6){
					MikanDraw->DrawTexture(0,j*MapSize,i*MapSize,3*MapSize,4*MapSize,MapSize,MapSize);
				}
				if(map[i][j][k]==5){
					MikanDraw->DrawTexture(0,j*MapSize,i*MapSize,7*MapSize,7*MapSize,MapSize,MapSize);
				}
				if(map[i][j][k]==4){
					MikanDraw->DrawTexture(0,j*MapSize,i*MapSize,6*MapSize,7*MapSize,MapSize,MapSize);
				}
				if(map[i][j][k]==3){
					MikanDraw->DrawTexture(0,j*MapSize,i*MapSize,5*MapSize,7*MapSize,MapSize,MapSize);
				}
				if(map[i][j][k]==2){
					MikanDraw->DrawTexture(0,j*MapSize,i*MapSize,0*MapSize,7*MapSize,MapSize,MapSize);
				}
			}
		}
	}

  return 0;
}

//MainLoop終了後に1度だけ実行
//後片付けなどを行う
void CleanUp( void )
{
}
